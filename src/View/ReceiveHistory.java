/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import General.Configuration;
import General.Nimbus;
import db.Dbcon;
import java.io.File;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jithinpv
 */
public class ReceiveHistory extends javax.swing.JFrame {

    String secretPassword;
    File fileToBeDecrypted;
    public static String encryption_algorithm_id = "1";

    /**
     * Creates new form RecieveHistory
     */
    public ReceiveHistory() {
        Nimbus.loadLoogAndFeel();
        initComponents();
        this.setLocationRelativeTo(null);
        loadIcons();
        loadPreviousTransaction();
        decrypt_button.setEnabled(false);
        Configuration.setIconOnLabel("blocks_green.jpg", main_label);
    }

    private void loadPreviousTransaction() {
        Dbcon dbcon = new Dbcon();
        DefaultTableModel dt = (DefaultTableModel) history_table.getModel();
        try {

            String query = "SELECT trans.*,history.history_id, usert.user_name , history.encryption_algorithm_id, algo.algorithm_name, history.cipher_file_size,history.cipher_file_name,history.password, history.encryption_file_type "
                    + " FROM tbl_transactions AS trans , "
                    + " tbl_user_details AS usert ,"
                    + " tbl_file_process_history AS history,"
                    + " tbl_encrption_algorithms AS algo"
                    + " WHERE history.history_id = trans.history_id"
                    + " AND trans.sender_id = usert.user_id"
                    + " AND algo.algorithm_id = history.encryption_algorithm_id"
                    + " AND trans.received_id =" + Login.logged_in_user_id;
            ResultSet rs = dbcon.select(query);
            String arr[] = new String[8];
            while (rs.next()) {
                arr[0] = rs.getString("transaction_id");
                arr[1] = rs.getString("user_name");
                arr[2] = rs.getString("algorithm_name");
                arr[3] = (Long.parseLong(rs.getString("cipher_file_size").trim())) + " Kb";
                arr[4] = rs.getString("cipher_file_name");
                arr[5] = rs.getString("password");
                arr[6] = rs.getString("encryption_file_type");
                arr[7] = rs.getString("encryption_algorithm_id");
                
                dt.addRow(arr);
            }


        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void loadIcons() {
        Configuration.setIconOnLabel("Untitled-2.png", file_format);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        file_format = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        decrypt_button = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        history_table = new javax.swing.JTable();
        cipher_name_text = new javax.swing.JTextField();
        size_text = new javax.swing.JTextField();
        algorithm_text = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        show_pass_text = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        password_text = new javax.swing.JPasswordField();
        jLabel6 = new javax.swing.JLabel();
        hidden_data_text = new javax.swing.JRadioButton();
        hidden_data_file = new javax.swing.JRadioButton();
        main_label = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        file_format.setText("jLabel1");
        file_format.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(file_format, new org.netbeans.lib.awtextra.AbsoluteConstraints(769, 40, 67, 65));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Name");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(655, 119, 66, -1));

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Size");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(655, 165, 66, -1));

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Password");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(655, 259, 66, -1));

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Algorithm");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(655, 213, 66, -1));

        decrypt_button.setText("DECRYPT");
        decrypt_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decrypt_buttonActionPerformed(evt);
            }
        });
        getContentPane().add(decrypt_button, new org.netbeans.lib.awtextra.AbsoluteConstraints(622, 409, -1, -1));

        history_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "TRANSFER ID", "FROM", "ALGORITHM", "SIZE", "FILENAME", "PASSWORD", "ENCRYPTION_TYPE", "alg_id"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        history_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                history_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(history_table);
        history_table.getColumnModel().getColumn(4).setMinWidth(0);
        history_table.getColumnModel().getColumn(4).setPreferredWidth(0);
        history_table.getColumnModel().getColumn(4).setMaxWidth(0);
        history_table.getColumnModel().getColumn(5).setMinWidth(0);
        history_table.getColumnModel().getColumn(5).setPreferredWidth(0);
        history_table.getColumnModel().getColumn(5).setMaxWidth(0);
        history_table.getColumnModel().getColumn(6).setMinWidth(0);
        history_table.getColumnModel().getColumn(6).setPreferredWidth(0);
        history_table.getColumnModel().getColumn(6).setMaxWidth(0);
        history_table.getColumnModel().getColumn(7).setMinWidth(0);
        history_table.getColumnModel().getColumn(7).setPreferredWidth(0);
        history_table.getColumnModel().getColumn(7).setMaxWidth(0);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 40, 604, 349));
        getContentPane().add(cipher_name_text, new org.netbeans.lib.awtextra.AbsoluteConstraints(762, 116, 230, -1));
        getContentPane().add(size_text, new org.netbeans.lib.awtextra.AbsoluteConstraints(762, 162, 230, -1));
        getContentPane().add(algorithm_text, new org.netbeans.lib.awtextra.AbsoluteConstraints(762, 210, 230, -1));

        jButton2.setText("Show Password");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(655, 366, -1, -1));
        getContentPane().add(show_pass_text, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 367, 212, -1));

        jButton3.setText("HOME");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(144, 409, -1, -1));
        getContentPane().add(password_text, new org.netbeans.lib.awtextra.AbsoluteConstraints(762, 256, 230, -1));

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Embeded data");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(655, 298, 107, -1));

        hidden_data_text.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(hidden_data_text);
        hidden_data_text.setForeground(new java.awt.Color(255, 255, 255));
        hidden_data_text.setSelected(true);
        hidden_data_text.setText("Text");
        hidden_data_text.setEnabled(false);
        getContentPane().add(hidden_data_text, new org.netbeans.lib.awtextra.AbsoluteConstraints(762, 294, 61, -1));

        hidden_data_file.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(hidden_data_file);
        hidden_data_file.setForeground(new java.awt.Color(255, 255, 255));
        hidden_data_file.setText("File");
        hidden_data_file.setEnabled(false);
        getContentPane().add(hidden_data_file, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 294, 58, -1));

        main_label.setText("jLabel1");
        getContentPane().add(main_label, new org.netbeans.lib.awtextra.AbsoluteConstraints(-6, -6, 1120, 490));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void decrypt_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decrypt_buttonActionPerformed
        // TODO add your handling code here:
        this.dispose();
        int encryption_file_type = 0;
        if (hidden_data_text.isSelected()) {
            encryption_file_type = 0;
        } else {
            encryption_file_type = 1;
        }
        Receiving receiving = new Receiving(fileToBeDecrypted, encryption_file_type);
        receiving.setVisible(true);
    }//GEN-LAST:event_decrypt_buttonActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        Home home = new Home();
        home.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

private void history_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_history_tableMouseClicked
    int selectedRow = history_table.getSelectedRow();
    String cipherName = history_table.getValueAt(selectedRow, 4).toString();
    String password = history_table.getValueAt(selectedRow, 5).toString();
    String algorithm = history_table.getValueAt(selectedRow, 2).toString();
    String size = history_table.getValueAt(selectedRow, 3).toString();
    String encrption_file_type = history_table.getValueAt(selectedRow, 6).toString();
    encryption_algorithm_id = history_table.getValueAt(selectedRow, 7).toString();
    System.out.println("encryption_algorithm_id id " + encryption_algorithm_id);

    cipher_name_text.setText(cipherName);
    fileToBeDecrypted = new File(Configuration.videoPool + cipherName);
    Configuration.setDefaultFileIcon(fileToBeDecrypted, file_format);
    System.out.println(fileToBeDecrypted.getAbsolutePath());
    algorithm_text.setText(algorithm);
    size_text.setText(size + " Kb");
    password_text.setText(password);
    if (encrption_file_type.trim().equals("0")) {
        hidden_data_text.setSelected(true);
    } else {
        hidden_data_file.setSelected(true);
    }

    decrypt_button.setEnabled(true);

}//GEN-LAST:event_history_tableMouseClicked

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

    show_pass_text.setText(new String(password_text.getPassword()));

    // TODO add your handling code here:
}//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReceiveHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReceiveHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReceiveHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReceiveHistory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new ReceiveHistory().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField algorithm_text;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField cipher_name_text;
    private javax.swing.JButton decrypt_button;
    private javax.swing.JLabel file_format;
    private javax.swing.JRadioButton hidden_data_file;
    private javax.swing.JRadioButton hidden_data_text;
    private javax.swing.JTable history_table;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel main_label;
    private javax.swing.JPasswordField password_text;
    private javax.swing.JTextField show_pass_text;
    private javax.swing.JTextField size_text;
    // End of variables declaration//GEN-END:variables
}
